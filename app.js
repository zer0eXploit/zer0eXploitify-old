const express = require("express");
const axios = require("axios");
const app = express();
const path = require("path");

app.use("/static", express.static(path.join(__dirname, "public")));

app.get("/", (req, res) => {
  if (req.query.redirect === "false") {
    res.sendFile(__dirname + "/index.html");
  } else {
    res.redirect(
      "https://accounts.spotify.com/authorize?client_id=dbbfcf08f6a3467d87cdc4c8095e3d9b&response_type=code&redirect_uri=" +
        process.env.REDIRECT_URI +
        "&scope=streaming user-read-email user-modify-playback-state user-read-private"
    );
  }
});

app.get("/auth-redirector", (req, res) => {
  const token = req.query.code;
  axios({
    url: "https://accounts.spotify.com/api/token",
    method: "POST",
    params: {
      grant_type: "authorization_code",
      code: token,
      redirect_uri: process.env.REDIRECT_URI,
    },
    headers: {
      Authorization: process.env.SPOTIFY_SECRET,
      "Content-Type": "application/x-www-form-urlencoded",
    },
  })
    .then(function (response) {
      //console.log(response.data);
      res.redirect("/?redirect=false#code=" + response.data.access_token);
    })
    .catch(function (error) {
      console.log(error.message);
      res.status(500).json({ message: "Something broke!" });
    });
});

app.use((req, res, next) => {
  res.status(404).json({ message: "Sorry can't find that!" });
});

app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ message: "Something broke!" });
});

app.listen("3000" || process.env.PORT, () => console.log("Server Sarted!"));
